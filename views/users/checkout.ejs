<%- include('../layout/header') -%>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">


  <%- include('../layout/navbar') -%>
    <div class="container">
      <div class="row">
        <!-- Left Column -->
        <div class="col-md-6">
          <!-- Selected Products -->
          <div class="selected-products bg-light p-3 mb-4" style="width: 500px; padding: 10px;">
            <h3 style="font-size: 16px;">Selected Products</h3>
            <% if (cart.items && cart.items.length> 0) { %>
              <% cart.items.forEach(item=> { %>
                <div class="product-item" style="display: flex; justify-content: space-between; margin-bottom: 10px;">
                  <img
                    src="<%= item.variantId && item.variantId.images[0] ? item.variantId.images[0] : '/images/default.jpg' %>"
                    alt="<%= item.ProductId ? item.ProductId.productName : 'Product Image' %>"
                    style="flex-shrink: 0; margin-right: 10px; width: 40px; height: 40px;">
                  <div style="flex-grow: 1;">
                    <p style="margin: 0; font-size: 14px;">
                      <%= item.ProductId ? item.ProductId.productName : 'Product not available' %>
                    </p>
                    <p style="margin: 0; font-size: 12px;">Qty: <%= item.quantity %>
                    </p>
                  </div>
                  <p style="margin: 0; font-size: 14px;">$<%= item.variantId ? (item.variantId.price *
                      item.quantity).toFixed(2) : '0.00' %>
                  </p>
                </div>
                <% }) %>
                  <% } else { %>
                    <p>No products in the cart.</p>
                    <% } %>
          </div>

          <!-- Address Section -->
          <div class="address-buttons mb-4">
            <button id="addAddressBtn" onclick="showForm(false)">Add New Address</button>
            <button id="selectAddressBtn" onclick="showForm(true)">Select Address</button>
          </div>

          <div id="addressFormContainer" class="form-container">
            <form id="addressForm">
              <div class="form-groupone">
                <label for="storedAddresses">Select Stored Address</label>
                <select id="storedAddresses" onchange="populateAddress(this)">
                  <option value="">-- Select an Address --</option>
                  <% if (address && address.addresses && address.addresses.length) { %>
                    <% address.addresses.forEach(details=> { %>
                      <option value="<%= details._id %>" data-name="<%= details.name %>"
                        data-street="<%= details.streetAddress %>" data-city="<%= details.city %>"
                        data-district="<%= details.district %>" data-pincode="<%= details.pincode %>"
                        data-phone="<%= details.phoneNo %>">
                        <%= details.name %>, <%= details.streetAddress %>
                      </option>
                      <% }) %>
                        <% } else { %>
                          <option value="">No addresses available. Please add a new address.</option>
                          <% } %>
                </select>
              </div>

              <!-- Address Form Fields -->
              <div class="form-group">
                <label for="name">Name</label>
                <input type="text" class="form-control" id="name">
                <small id="nameError" class="error"></small>
              </div>
              <div class="form-group">
                <label for="streetAddress">Street Address</label>
                <input type="text" class="form-control" id="streetAddress">
                <small id="streetError" class="error"></small>
              </div>
              <div class="form-group">
                <label for="city">City</label>
                <input type="text" class="form-control" id="city">
                <small id="cityError" class="error"></small>
              </div>
              <div class="form-group">
                <label for="district">District</label>
                <input type="text" class="form-control" id="district">
                <small id="districtError" class="error"></small>
              </div>
              <div class="form-group">
                <label for="pincode">Pincode</label>
                <input type="number" class="form-control" id="pincode">
                <small id="pincodeError" class="error"></small>
              </div>
              <div class="form-group">
                <label for="phoneNo">Phone Number</label>
                <input type="text" class="form-control" id="phoneNo">
                <small id="phoneError" class="error"></small>
              </div>
              <button id="addressSubmit" type="submit" class="btn btn-primary">Save Address</button>
            </form>
          </div>
        </div>

        <!-- Right Column -->
        <div class="col-md-6">
          <!-- Cart Total -->
          <div class="cart-detail cart-total bg-light p-3 mb-4">
            <h3 class="billing-heading mb-4">Cart Total</h3>
            <p class="d-flex">
              <span>Subtotal</span>
              <span>
                <%= cart.totalPrice %>
              </span>
            </p>
            <p class="d-flex">
              <span>Delivery</span>
              <span>$0.00</span>
            </p>
            <p class="d-flex">
              <span>Discount</span>
              <span>$0.00</span>
            </p>
            <hr>
            <p class="d-flex total-price">
              <span>Total</span>
              <span>
                <%= cart.totalPrice %>
              </span>
            </p>
          </div>

          <!-- Payment Method -->
          <div class="cart-detail bg-light p-3 mb-4">
            <h3 class="billing-heading mb-4">Payment Method</h3>
            <div class="form-group">
              <div class="col-md-12">
                <div class="radio">
                  <label><input type="radio" value="Direct Bank Transfer" name="paymentMethod" class="mr-2"> Direct Bank
                    Transfer</label>
                </div>
              </div>
            </div>
            <div class="form-group">
              <div class="col-md-12">
                <div class="radio">
                  <label><input type="radio" value="Cash On Delivery" name="paymentMethod" class="mr-2">
                    Cash On
                    Delivery</label>
                </div>
              </div>
            </div>
            <div class="form-group">
              <div class="col-md-12">
                <div class="radio">
                  <label><input type="radio" value="Razorpay" name="paymentMethod" class="mr-2">
                    Razorpay</label>
                </div>
              </div>
            </div>
            <div class="form-group">
              <div class="col-md-12">
                <div class="checkbox">
                  <label><input type="checkbox" value="" class="mr-2"> I have read and accept the terms and
                    conditions</label>
                </div>
              </div>
            </div>
            <p><a href="#" class="btn btn-primary py-3 px-4" onclick="orderConfirm(event)">Proceed to Pay</a></p>
          </div>
        </div> <!-- End of Right Column -->
      </div> <!-- End of Row -->
    </div> <!-- End of Container -->


    <%- include('../layout/footer') -%>
      <script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
      <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
      <script src="https://checkout.razorpay.com/v1/checkout.js"></script>

      <script>
        var addressData
        const formInputs = document.querySelectorAll('.form-control');

        function showForm(isSelectAddress) {
          formInputs.forEach(input => {
            input.removeAttribute('readonly');
          });
          clearForm();
          const formContainer = document.getElementById('addressFormContainer');
          const storedAddresses = document.getElementById('storedAddresses');
          const submitButton = document.getElementById('addressSubmit');
          formContainer.classList.add('active');

          if (!isSelectAddress) {

            storedAddresses.parentElement.style.display = 'none';
            document.getElementById('addressForm').addEventListener('submit', (event) => {
              event.preventDefault();
              const name = document.getElementById('name').value.trim()
              const streetAddress = document.getElementById('streetAddress').value.trim();
              const city = document.getElementById('city').value.trim();
              const district = document.getElementById('district').value.trim();
              const pincode = document.getElementById('pincode').value.trim();
              const phoneNo = document.getElementById('phoneNo').value.trim();
              let isValid = true;
              const nameRegex = /^[A-Za-z\s]+$/; // Allows only letters and spaces
              const streetRegex = /^[A-Za-z0-9\s,.]+$/; // Allows letters, numbers, spaces, commas, and periods
              const cityDistrictRegex = /^[A-Za-z\s]+$/;

              if (name === "") {
                document.getElementById('nameError').textContent = "Name is required.";
                isValid = false;
              } else if (!nameRegex.test(name)) {
                document.getElementById('nameError').textContent = "Name can only contain letters and spaces.";
                isValid = false;
              } else {
                document.getElementById('nameError').textContent = ""; // Clear error if valid
              }

              // Validate street address
              if (streetAddress === "") {
                document.getElementById('streetError').textContent = "Street Address is required.";
                isValid = false;
              } else if (!streetRegex.test(streetAddress)) {
                document.getElementById('streetError').textContent = "Street Address can only contain letters, numbers, commas, and periods.";
                isValid = false;
              } else {
                document.getElementById('streetError').textContent = ""; // Clear error if valid
              }

              // Validate city
              if (city === "") {
                document.getElementById('cityError').textContent = "City is required.";
                isValid = false;
              } else if (!cityDistrictRegex.test(city)) {
                document.getElementById('cityError').textContent = "City can only contain letters and spaces.";
                isValid = false;
              } else {
                document.getElementById('cityError').textContent = ""; // Clear error if valid
              }

              // Validate district
              if (district === "") {
                document.getElementById('districtError').textContent = "District is required.";
                isValid = false;
              } else if (!cityDistrictRegex.test(district)) {
                document.getElementById('districtError').textContent = "District can only contain letters and spaces.";
                isValid = false;
              } else {
                document.getElementById('districtError').textContent = ""; // Clear error if valid
              }

              const pincodePattern = /^[1-9][0-9]{5}$/;
              if (!pincodePattern.test(pincode)) {
                document.getElementById('pincodeError').textContent = "Please enter a valid 6-digit pincode.";
                isValid = false;
              }

              const phonePattern = /^[0-9]{10}$/;
              if (!phonePattern.test(phoneNo)) {
                document.getElementById('phoneError').textContent = "Please enter a valid 10-digit phone number.";
                isValid = false;
              }
              console.log(isValid);
              if (isValid) {
                fetch("/addAddress", {
                  method: "post",
                  headers: {
                    "content-type": "application/json"
                  },
                  body: JSON.stringify({
                    name,
                    streetAddress,
                    city,
                    district,
                    pincode,
                    phoneNo
                  })
                })
                  .then(responce => responce.json())
                  .then(data => {
                    if (data.success) {
                      Toastify({
                        text: data.message,
                        backgroundColor: "linear-gradient(to right, #00b09b, #96c93d)",
                        duration: 5000
                      }).showToast();
                    }
                  })
                setTimeout(() => {
                  window.location.reload()
                }, 2000);
              }
            })
          } else {

            storedAddresses.parentElement.style.display = 'block';
            addressSubmit.style.display = 'none';

            formInputs.forEach(input => {
              input.setAttribute('readonly', 'true');

            })
          }
        }

        function populateAddress(select) {
          const selectedOption = select.options[select.selectedIndex];

          if (selectedOption.value === "add-new") {
            showAddNewAddressForm();
            clearForm();
          } else if (selectedOption.value) {
            // Populate fields with selected address data
            document.getElementById('name').value = selectedOption.getAttribute('data-name');
            document.getElementById('streetAddress').value = selectedOption.getAttribute('data-street');
            document.getElementById('city').value = selectedOption.getAttribute('data-city');
            document.getElementById('district').value = selectedOption.getAttribute('data-district');
            document.getElementById('pincode').value = selectedOption.getAttribute('data-pincode');
            document.getElementById('phoneNo').value = selectedOption.getAttribute('data-phone');

            // Create address data object
            addressData = {
              name: selectedOption.getAttribute('data-name'),
              streetAddress: selectedOption.getAttribute('data-street'),
              city: selectedOption.getAttribute('data-city'),
              district: selectedOption.getAttribute('data-district'),
              pincode: selectedOption.getAttribute('data-pincode'),
              phoneNo: selectedOption.getAttribute('data-phone')
            };
          } else {
            clearForm(); // Clear the form if no valid option is selected
          }
        }



        async function orderConfirm(event) {
          event.preventDefault();
          if (!addressData) {
            Toastify({
              text: "please select address",
              background: "linear-gradient(to right, #00b09b, #96c93d)",
              duration: 5000
            }).showToast();
            return
          }
          const paymentMethod = document.querySelector('input[name="paymentMethod"]:checked');
          let paymentMethodInput
          if (paymentMethod) {
            paymentMethodInput = paymentMethod.value;
          }
          const termsAccepted = document.querySelector('input[type="checkbox"]').checked;
          if (!paymentMethodInput) {
            Toastify({
              text: "Please select payment Mthode",
              background: "linear-gradient(to right, #00b09b, #96c93d)",
              duration: 5000
            }).showToast();
            return;
          }
          if (!termsAccepted) {
            Toastify({
              text: "Please accept the terms and conditions",
              background: "linear-gradient(to right, #00b09b, #96c93d)",
              duration: 5000
            }).showToast();
            return;
          }

          console.log("this is razor pay", paymentMethod)
          if (paymentMethod.value == "Cash On Delivery") {
            const responce = await fetch('/order', {
              method: "POST",
              headers: {
                "content-Type": "application/json"
              },
              body: JSON.stringify({
                addressData,
                paymentMethodInput
              })
            })
            const data = await responce.json();
            if (data.success) {
              Swal.fire({
                title: 'Updated!',
                text: `Order status has been updated to ${status}.`,
                icon: 'success',
                confirmButtonText: 'View Orders',
                showCancelButton: true,
                cancelButtonText: 'Continue Shopping'
              }).then((result) => {
                if (result.isConfirmed) {
                  window.location.href = '/orderDetails';
                } else {
                  window.location.href = '/shop';
                }
              });
            }

          }

          else if (paymentMethod.value === "Razorpay") {
            const response = await fetch('/Razorpay', {
              method: "POST",
              headers: {
                "Content-Type": "application/json"
              }
            });


            const data = await response.json();

            if (data.success) {
              console.log("kadsfkasdjflsd");

              const options = {
                key: data.key_id,
                amount: data.amount,
                currency: data.currency,
                name: "Your Company Name",
                description: "Purchase Description",
                order_id: data.order_id,
                handler: async function (response) {
                  const paymentData = {
                    order_id: data.order_id,
                    payment_id: response.razorpay_payment_id,
                    signature: response.razorpay_signature,
                  };
                  console.log("kadsfkasdjflsd")
                  const verificationResponse = await fetch('/verifyRazorpay', {
                    method: 'POST',
                    headers: {
                      'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                      paymentData, addressData,
                      paymentMethodInput
                    }),
                  });

                  const verificationData = await verificationResponse.json();

                  if (verificationData.success) {
                    Swal.fire({
                      title: 'Updated!',
                      text: `Order status has been updated to ${status}.`,
                      icon: 'success',
                      confirmButtonText: 'View Orders',
                      showCancelButton: true,
                      cancelButtonText: 'Continue Shopping'
                    }).then((result) => {
                      if (result.isConfirmed) {
                        window.location.href = '/orderDetails';
                      } else {
                        window.location.href = '/shop';
                      }
                    });

                  } else {
                    alert('Payment verification failed: ' + verificationData.message);
                  }
                },
                prefill: {
                  name: addressData.name,
                  email: "no",
                  contact: addressData.phoneNo
                },
                theme: {
                  color: "#F37254"
                }
              };

              const rzp = new Razorpay(options);
              rzp.open();
            } else {
              console.error(data.message);
              alert(data.message);
            }
          }

        }
        function clearForm() {
          document.getElementById('name').value = '';
          document.getElementById('streetAddress').value = '';
          document.getElementById('city').value = '';
          document.getElementById('district').value = '';
          document.getElementById('pincode').value = '';
          document.getElementById('phoneNo').value = '';
        }



        function showAddNewAddressForm() {
          document.getElementById('addressFormContainer').style.display = 'block';

          const submitButton = document.getElementById('addressSubmit');
          submitButton.style.display = 'inline-block'; // or 'block' depending on your layout
        }

        function clearForm() {
          // Clear input fields if necessary
          document.getElementById('name').value = '';
          document.getElementById('streetAddress').value = '';
          document.getElementById('city').value = '';
          document.getElementById('district').value = '';
          document.getElementById('pincode').value = '';
          document.getElementById('phoneNo').value = '';

          // Make sure to show the submit button if it's hidden
          document.getElementById('addressSubmit').style.display = 'inline-block';
        }


      </script>