<%- include('../layout/admin/adminHeader') -%> 
<%- include('../layout/admin/adminNavbar') -%>

<div class="main-panel">
  <div class="content-wrapper">
    <div class="page-header">
      <h3 class="page-title">Category List</h3>
      <button
        type="button"
        class="btn btn-primary"
        data-toggle="modal"
        data-target="#addCategoryModal"
      >
        Add Category
      </button>
    </div>

    <div class="row">
      <div class="col-12 grid-margin stretch-card">
        <div class="card">
          <div class="card-body">
            <h4 class="card-title">Categories</h4>
            <p class="card-description">List of all categories</p>
            <div class="table-responsive">
              <table class="table table-striped" id="categoryTable">
                <thead>
                  <tr>
                    <th>#</th>
                    <th>Category Name</th>
                    <th>Actions</th>
                  </tr>
                </thead>
                <tbody>
                  <% categories.forEach((category, index) => { %>
                    <tr>
                      <td><%= (currentPage - 1) * 10 + (index + 1) %></td> <!-- Adjust index for pagination -->
                      <td><%= category.categoryName %></td>
                      <td>
                        <button class="btn btn-dark btn-sm" onclick="openEditModal('<%= category._id %>', '<%= category.categoryName %>')">Edit</button>
                        <button class="btn <%= category.isDeleted ? 'btn-warning' : 'btn-danger' %> btn-sm" onclick="toggleCategory('<%= category._id %>')">
                          <%= category.isDeleted ? 'Restore' : 'Delete' %>
                        </button>
                      </td>
                    </tr>
                  <% }); %>
                </tbody>
              </table>
            </div>

            <!-- Pagination Section -->
            <div class="row mt-5">
              <div class="col text-center">
                <nav aria-label="Page navigation">
                  <ul class="pagination justify-content-center">
                    <% if (currentPage > 1) { %>
                      <li class="page-item">
                        <a class="page-link" href="/admin/category?page=<%= currentPage - 1 %>" aria-label="Previous">
                          <span aria-hidden="true">&laquo;</span>
                        </a>
                      </li>
                    <% } else { %>
                      <li class="page-item disabled">
                        <a class="page-link" href="#" aria-label="Previous">
                          <span aria-hidden="true">&laquo;</span>
                        </a>
                      </li>
                    <% } %>

                    <% for (let i = 1; i <= totalPages; i++) { %>
                      <% if (i === currentPage) { %>
                        <li class="page-item active"><a class="page-link" href="#"><%= i %></a></li>
                      <% } else { %>
                        <li class="page-item"><a class="page-link" href="/admin/category?page=<%= i %>"><%= i %></a></li>
                      <% } %>
                    <% } %>

                    <% if (currentPage < totalPages) { %>
                      <li class="page-item">
                        <a class="page-link" href="/admin/category?page=<%= currentPage + 1 %>" aria-label="Next">
                          <span aria-hidden="true">&raquo;</span>
                        </a>
                      </li>
                    <% } else { %>
                      <li class="page-item disabled">
                        <a class="page-link" href="#" aria-label="Next">
                          <span aria-hidden="true">&raquo;</span>
                        </a>
                      </li>
                    <% } %>
                  </ul>
                </nav>
              </div>
            </div>
            <!-- End Pagination Section -->

          </div>
        </div>
      </div>
    </div>
  </div>
</div>


<%- include('../layout/admin/adminFooter') -%>



<!-- Modal for Adding Category -->
<div
  class="modal fade"
  id="addCategoryModal"
  tabindex="-1"
  role="dialog"
  aria-labelledby="addCategoryModalLabel"
  aria-hidden="true"
>
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="addCategoryModalLabel">Add Category</h5>
        <button
          type="button"
          class="close"
          data-dismiss="modal"
          aria-label="Close"
        >
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <!-- Form for adding category -->
        <form id="addCategory" action="/admin/addCategory" method="POST">
          <div class="form-group">
            <label for="categoryName">Category Name</label>
            <div id="existError" style="color: red"></div>
            <input
              type="text"
              class="form-control"
              id="categoryName"
              name="categoryName"
              placeholder="Enter category name"
              required
            />
          </div>
          <button type="submit" class="btn btn-primary">Add Category</button>
        </form>
      </div>
    </div>
  </div>
</div>
<!-- Modal for Editing Category -->
<div
  class="modal fade"
  id="editCategoryModal"
  tabindex="-1"
  role="dialog"
  aria-labelledby="editCategoryModalLabel"
  aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="editCategoryModalLabel">Edit Category</h5>
        <button
          type="button"
          class="close"
          data-dismiss="modal"
          aria-label="Close"
        >
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <!-- Form for editing category -->
        <form id="editCategoryForm" method="POST">
          <div class="form-group">
            <label for="editCategoryName">Category Name</label>
            <div id="editExistError" style="color: red"></div>
            <input
              type="text"
              class="form-control"
              id="editCategoryName"
              name="categoryName"
              placeholder="Enter category name"
              required
            />
          </div>
          <button type="submit" class="btn btn-primary">Update Category</button>
        </form>
      </div>
    </div>
  </div>
</div>

<!-- Include Footer -->
<%- include('../layout/admin/adminFooter') -%>

<!-- Styles -->
<style>
  .category-list {
    list-style-type: none;
    padding: 0;
  }

  .category-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 10px;
    border-bottom: 1px solid #ddd;
  }

  .category-name {
    font-weight: bold;
  }

  .category-actions {
    display: flex;
    gap: 10px;
  }
</style>

<script>
  // Handle adding a new category
document.getElementById("addCategory").addEventListener("submit", async (e) => {
  e.preventDefault();
  const categoryName = document.getElementById("categoryName").value.trim();
  const existError = document.getElementById("existError");
  existError.innerHTML = "";
  const categoryRegex = /^[A-Za-z ]+$/;
  if(!categoryRegex.test(categoryName)){
    return existError.innerHTML = "Enter valid category name"
  }

  try {
    const response = await fetch("/admin/addCategory", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({ categoryName }),
    });
    const result = await response.json();
    if (result.success) {
      window.location.href = "/admin/category";
    } else {
      existError.innerHTML = result.message;
    }
  } catch (error) {
    console.log(error);
  }
});




function openEditModal(categoryId, categoryName) {
  document.getElementById('editCategoryForm').action = `/admin/editCategory/${categoryId}`;
  document.getElementById('editCategoryName').value = categoryName;
  document.getElementById('editExistError').innerHTML = '';
  
  $('#editCategoryModal').modal('show');
}

function toggleCategory(categoryId) {
  Swal.fire({
    title: 'Are you sure?',
    text: "You won't be able to revert this!",
    icon: 'warning',
    showCancelButton: true,
    confirmButtonColor: '#3085d6',
    cancelButtonColor: '#d33',
    confirmButtonText: 'Yes, do it!'
  }).then((result) => {
    if (result.isConfirmed) {
      fetch(`/admin/category/${categoryId}`, {
        method: 'POST',
      })
      .then(response => {
        if (!response.ok) {
          throw new Error('Failed to toggle category status.');
        }
        return response.json();
      })
      .then(result => {
        if (result.success) {
          Swal.fire(
            'Done!',
            result.message,
            'success'
          ).then(() => {
            location.reload(); 
          });
        } else {
          Swal.fire(
            'Error!',
            result.message,
            'error'
          );
        }
      })
      .catch(error => {
        console.error('Error toggling category:', error);
        Swal.fire('Error!', 'Something went wrong. Please try again.', 'error');
      });
    }
  });
}

document.getElementById("editCategoryForm").addEventListener("submit", async (e) => {
  e.preventDefault();

  const categoryId = document.getElementById("editCategoryForm").action.split("/").pop();
  const categoryName = document.getElementById("editCategoryName").value.trim();
  const existError = document.getElementById("editExistError");
  existError.innerHTML = "";

  try {
    const response = await fetch(`/admin/editCategory/${categoryId}`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({ categoryName }),
    });

    const result = await response.json();

    if (result.success) {
      $('#editCategoryModal').modal('hide');
      location.reload(); 
    } else {
      existError.innerHTML = result.message;
    }
  } catch (error) {
    console.log(error);
  }
});

</script>
